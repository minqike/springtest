<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.min.spring.dao.ExcelImportDataDao">

    <resultMap id="BaseResultMap" type="com.min.spring.entity.ExcelImportData">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="file_id" property="fileId" jdbcType="INTEGER"/>
		<result column="file_name" property="fileName" jdbcType="VARCHAR"/>
		<result column="host_id" property="hostId" jdbcType="VARCHAR"/>
		<result column="message" property="message" jdbcType="VARCHAR"/>
		<result column="start_time" property="startTime" jdbcType="TIMESTAMP"/>
		<result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
		<result column="status" property="status" jdbcType="INTEGER"/>
		<result column="import_type" property="importType" jdbcType="VARCHAR"/>
		<result column="created" property="created" jdbcType="TIMESTAMP"/>
		<result column="updated" property="updated" jdbcType="TIMESTAMP"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO excel_import_data(file_id,file_name,host_id,message,start_time,end_time,status,import_type,created,updated)
        VALUES(#{fileId},#{fileName},#{hostId},#{message},#{startTime},#{endTime},#{status},#{importType},#{created},#{updated})
    </insert>
    <insert id="batchInsert" parameterType="list" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO excel_import_data(file_id,file_name,host_id,message,start_time,end_time,status,import_type,created,updated)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.fileId},#{item.fileName},#{item.hostId},#{item.message},#{item.startTime},#{item.endTime},#{item.status},#{item.importType},#{item.created},#{item.updated})
        </foreach>
   </insert>
    <update id="update">
        UPDATE excel_import_data
        <trim prefix="SET" suffixOverrides=",">
			<if test="fileId!=null">
                file_id=#{fileId},
            </if>
			<if test="fileName!=null">
                file_name=#{fileName},
            </if>
			<if test="hostId!=null">
                host_id=#{hostId},
            </if>
			<if test="message!=null">
                message=#{message},
            </if>
			<if test="startTime!=null">
                start_time=#{startTime},
            </if>
			<if test="endTime!=null">
                end_time=#{endTime},
            </if>
			<if test="status!=null">
                status=#{status},
            </if>
			<if test="importType!=null">
                import_type=#{importType},
            </if>
			<if test="created!=null">
                created=#{created},
            </if>
			<if test="updated!=null">
                updated=#{updated},
            </if>
        </trim>
        WHERE id=#{id}
    </update>

    <sql id="SELECT_FIELD">
        id,file_id,file_name,host_id,message,start_time,end_time,status,import_type,created,updated
    </sql>

    <sql id="QUERY_SQL">
        from excel_import_data
        <where>
			<if test="id!=null and id!=-1">
               AND id=#{id}
            </if>
			<if test="fileId!=null and fileId!=-1">
               AND file_id=#{fileId}
            </if>
			<if test="fileName!=null">
               AND file_name=#{fileName}
            </if>
			<if test="hostId!=null">
               AND host_id=#{hostId}
            </if>
			<if test="message!=null">
               AND message=#{message}
            </if>
			<if test="startTime!=null">
               AND start_time=#{startTime}
            </if>
			<if test="endTime!=null">
               AND end_time=#{endTime}
            </if>
			<if test="status!=null and status!=-1">
               AND status=#{status}
            </if>
			<if test="importType!=null">
               AND import_type=#{importType}
            </if>
			<if test="created!=null">
               AND created=#{created}
            </if>
			<if test="updated!=null">
               AND updated=#{updated}
            </if>

        </where>
    </sql>

    <select id="query" resultMap="BaseResultMap">
        select <include refid="SELECT_FIELD"/>
        <include refid="QUERY_SQL"/>
        <if test="limit!=null and limit!=-1 ">
            <if test="offset!=null and offset!=-1">
                limit #{offset},#{limit}
            </if>
        </if>
    </select>

    <select id="count" resultType="long">
        select count(*)
        <include refid="QUERY_SQL"/>
    </select>

</mapper>